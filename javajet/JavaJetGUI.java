/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JavaJetGUI.java
 *
 * Created on Sep 23, 2011, 10:18:53 PM
 */
package javajet;

/*
 * Imports
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.logging.*;

public class JavaJetGUI extends JFrame
{
    // Variables declaration - do not modify
    private JPanel m_credentials;
    private JTextField m_idField;
    private JButton m_login;
    private JButton m_logout;
    private JPasswordField m_passField;
    private JLabel m_password;
    private JCheckBox m_remID;
    private JCheckBox m_remPass;
    private JPanel m_status;
    private JLabel m_studentID;
    String studentID;
    String password;
    int poll = 15;
    private JavaJet jj;
    // End of variables declaration
    
    /** Creates new form JavaJetGUI */
    public JavaJetGUI() 
    {
        initComponents();
        this.setTitle("JavaJet");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() 
    {

        m_credentials = new JPanel();
        m_studentID = new JLabel();
        m_idField = new JTextField();
        m_password = new JLabel();
        m_remID = new JCheckBox();
        m_remPass = new JCheckBox();
        m_passField = new JPasswordField();
        m_status = new JPanel();
        m_login = new JButton();
        m_logout = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        m_credentials.setBorder(BorderFactory.createTitledBorder(BorderFactory.createTitledBorder(BorderFactory.createTitledBorder("Credentials"))));
        m_credentials.setFont(new Font("Tahoma", 0, 14)); // NOI18N

        m_studentID.setText("Student ID");

        m_idField.setText("Student ID field");
        m_idField.addActionListener(new ActionListener() 
        {
            public void actionPerformed(ActionEvent e) 
            {
                m_idFieldActionPerformed(e);
            }
        });

        m_password.setText("Password");

        m_remID.setText("Remember ID?");
        m_remID.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent e) 
            {
                m_remIDActionPerformed(e);
            }
        });

        m_remPass.setText("Remember password?");

        m_passField.setText("PasswordField");

        GroupLayout m_credentialsLayout = new GroupLayout(m_credentials);
        m_credentials.setLayout(m_credentialsLayout);
        m_credentialsLayout.setHorizontalGroup(
            m_credentialsLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(m_credentialsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(m_credentialsLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(m_studentID)
                    .addComponent(m_password))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(m_credentialsLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(m_passField)
                    .addComponent(m_idField, GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(m_credentialsLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(m_remID)
                    .addComponent(m_remPass))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        m_credentialsLayout.setVerticalGroup(
            m_credentialsLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(m_credentialsLayout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(m_credentialsLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(m_studentID)
                    .addComponent(m_idField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_remID))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(m_credentialsLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(m_password)
                    .addComponent(m_remPass)
                    .addComponent(m_passField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        );

        m_status.setBorder(BorderFactory.createTitledBorder("Status"));
        m_status.setFont(new Font("Tahoma", 0, 14)); // NOI18N

        GroupLayout m_statusLayout = new GroupLayout(m_status);
        m_status.setLayout(m_statusLayout);
        m_statusLayout.setHorizontalGroup(
            m_statusLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 368, Short.MAX_VALUE)
        );
        m_statusLayout.setVerticalGroup(
            m_statusLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 107, Short.MAX_VALUE)
        );

        m_login.setText("Login");
        m_login.setMaximumSize(new Dimension(65, 23));
        m_login.setMinimumSize(new Dimension(65, 23));
        m_login.setPreferredSize(new Dimension(65, 23));
        m_login.addActionListener(new ActionListener() 
        {
            public void actionPerformed(ActionEvent e) 
            {
                m_loginActionPerformed(e);
            }
        });

        m_logout.setText("Logout");
        m_logout.addActionListener(new ActionListener() 
        {
            public void actionPerformed(ActionEvent e) 
            {
                m_logoutActionPerformed(e);
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(m_credentials, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(m_status, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(m_login, GroupLayout.PREFERRED_SIZE, 131, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(m_logout, GroupLayout.PREFERRED_SIZE, 131, GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(m_credentials, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(m_logout, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_login, GroupLayout.PREFERRED_SIZE, 49, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_status, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>

private void m_idFieldActionPerformed(ActionEvent e) 
{
// TODO add your handling code here:
	JTextField inputID = (JTextField) e.getSource();
	studentID = inputID.getText();
}

private void m_passFieldActionPerformed(ActionEvent e) 
{
// TODO add your handling code here:
	JPasswordField inputPass = (JPasswordField) e.getSource();
	char[] passy = inputPass.getPassword();
	password = new String(passy);
			
}
private void m_loginActionPerformed(ActionEvent e)
{
// TODO add your handling code here:
	
	try
	{
		jj = new JavaJet();
		jj.login(studentID,password,poll);
	}
	catch (Exception e1) 
	{
		// TODO: handle exception
		System.out.println(e1.getMessage());
	}
	
}

private void m_logoutActionPerformed(ActionEvent e) 
{                                         
// TODO add your handling code here:
//    logout.addActionListener(new Logout());
//    logout.addKeyListener(new Logout());
}                                        

private void m_remIDActionPerformed(ActionEvent e) 
{
// TODO add your handling code here:
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try 
        {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) 
            {
                if ("Nimbus".equals(info.getName())) 
                {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) 
        {
            Logger.getLogger(JavaJetGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            Logger.getLogger(JavaJetGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) 
        {
            Logger.getLogger(JavaJetGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex)
        {
            Logger.getLogger(JavaJetGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            @Override
            public void run() 
            {
                new JavaJetGUI().setVisible(true);
            }
        });
    }
}
